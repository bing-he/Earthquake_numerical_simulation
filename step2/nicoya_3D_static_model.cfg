[pylithapp]

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent.formulation.time_step]
total_time = 0*s
dt = 0.1*s

[pylithapp.mesh_generator.reader]
filename = mesh/nicoya_3D_static_model_smooth_grid2km.exo

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.timedependent]
# Set the BC to an array with 5 boundary conditions. free-slip-boundary for 5 boundaries.
bc =[down_boundary,left_boundary,right_boundary,forward_boundary,backward_boundary]

[pylithapp.timedependent.bc.down_boundary]
bc_dof = [2]
db_initial.label = Dirichlet BC on west
label = down_group

[pylithapp.timedependent.bc.left_boundary]
label = left_group
bc_dof = [0]
db_initial.label = Dirichlet BC on west

[pylithapp.timedependent.bc.right_boundary]
label = right_group
bc_dof = [0]
db_initial.label = Dirichlet BC on west

[pylithapp.timedependent.bc.forward_boundary]
label = forward_group
bc_dof = [1]
db_initial.label = Dirichlet BC on west

[pylithapp.timedependent.bc.backward_boundary]
label = backward_group
bc_dof = [1]
db_initial.label = Dirichlet BC on west

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
# Set the interfaces to an array with 1 fault.
[pylithapp.timedependent]
interfaces = [fault]
interfaces.fault = pylith.faults.FaultCohesiveKin

# Set the parameters for the fault interface condition.
[pylithapp.timedependent.interfaces.fault]
# The label corresponds to the name of the nodeset in CUBIT.
label = fault_interface
id = 100
edge=fault_edge

# We must define the quadrature information for fault cells.
# The fault cells are 1D (line).
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 2

# The slip time and final slip are defined in spatial databases.
#[pylithapp.timedependent.interfaces.fault.eq_srcs.ruptures]
#slip_function = pylith.faults.SingleRupture


[pylithapp.timedependent.interfaces.fault.eq_srcs.rupture.slip_function]
slip.iohandler.filename = spatialdb/nicoya_interseismic_locking_grid2km.spatialdb
slip.query_type = linear
slip.label = Final slip

# Slip time is uniform, so use UniformDB for convenience
slip_time = spatialdata.spatialdb.UniformDB
slip_time.label = Slip time
slip_time.values = [slip-time]
slip_time.data = [0.0*year]

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.timedependent]
materials = [left,right]

[pylithapp.timedependent.materials]
left = pylith.materials.ElasticIsotropic3D
right = pylith.materials.ElasticIsotropic3D

[pylithapp.timedependent.materials.left]
label = 2
#label is the same at block number
id = 2

db_properties.label = Continental crust properties
db_properties.iohandler.filename = spatialdb/mat_concrust3.spatialdb

quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 3

[pylithapp.timedependent.materials.right]
label = 1
id = 1

db_properties.label = Oceanic crust properties
db_properties.iohandler.filename = spatialdb/mat_concrust2.spatialdb

quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 3

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Domain
[pylithapp.problem.formulation.output.domain]
writer.filename = output4/nicoya_interseismic_lockingm2s2.h5

# Faults
[pylithapp.problem.interfaces.fault.output]
writer = pylith.meshio.DataWriterHDF5
writer.filename = output4/nicoya_interseismic-faultm2s2.h5

# Materials
[pylithapp.timedependent.materials.left.output]
writer.filename = output4/nicoya_interseismic-leftm2s2.h5

[pylithapp.timedependent.materials.right.output]
writer.filename = output4/nicoya_interseismic-rightm2s2.h5


# End of file
