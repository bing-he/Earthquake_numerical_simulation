[pylithapp]

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent.formulation.time_step]
total_time = 35*s
dt = 0.007*s

[pylithapp.timedependent]
#implicit.solver = pylith.problems.SolverNonlinear
# Change to an explicit time stepping formulation
formulation = pylith.problems.Explicit
# formulation = pylith.problems.ExplicitTet4

# Nondimensionalize problem using wave propagation parameters.
normalizer = spatialdata.units.NondimElasticDynamic
[pylithapp.timedependent.normalizer]
shear_wave_speed = 3.43*km/s
mass_density = 2.786e+3*kg/m**3
wave_period = 0.3*s
#[pylithapp.timedependent.formulation]
#norm_viscosity = 0.2
[pylithapp.mesh_generator.reader]
filename = mesh/nicoya_3D_static_model_simple_ployval_grid0.25km4.exo

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.timedependent]
bc = [down_boundary,left_boundary,right_boundary,forward_boundary,backward_boundary]
bc.down_boundary   = pylith.bc.AbsorbingDampers
bc.left_boundary  = pylith.bc.AbsorbingDampers
bc.right_boundary   = pylith.bc.AbsorbingDampers
bc.forward_boundary  = pylith.bc.AbsorbingDampers
bc.backward_boundary = pylith.bc.AbsorbingDampers

[pylithapp.timedependent.bc.down_boundary]
label = down_group
db.label = Absorbing BC down_boundary
db.iohandler.filename = spatialdb/matprops.spatialdb
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 2
quadrature.cell.quad_order = 2
up_dir = [0,-1,0]

[pylithapp.timedependent.bc.left_boundary]
label = left_group
db.label = Absorbing BC left_boundary
db.iohandler.filename = spatialdb/matprops.spatialdb
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 2
quadrature.cell.quad_order = 2

[pylithapp.timedependent.bc.right_boundary]
label = right_group
db.label = Absorbing BC right_boundary
db.iohandler.filename = spatialdb/matprops.spatialdb
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 2
quadrature.cell.quad_order = 2

[pylithapp.timedependent.bc.forward_boundary]
label = forward_group
db.label = Absorbing BC northB
db.iohandler.filename = spatialdb/matprops.spatialdb
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 2
quadrature.cell.quad_order = 2

[pylithapp.timedependent.bc.backward_boundary]
label = backward_group
db.label = Absorbing BC backward_boundary
db.iohandler.filename = spatialdb/matprops.spatialdb
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 2
quadrature.cell.quad_order = 2

# materials
# ----------------------------------------------------------------------
[pylithapp.timedependent]
materials = [left,right]

[pylithapp.timedependent.materials]
left = pylith.materials.ElasticIsotropic3D
right = pylith.materials.ElasticIsotropic3D

[pylithapp.timedependent.materials.left]
label = 1
id = 1

db_properties.label = Continental crust properties
db_properties.iohandler.filename = spatialdb/mat_concrust.spatialdb

quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 3

[pylithapp.timedependent.materials.right]
label = 2
id = 2

db_properties.label = Oceanic crust properties
db_properties.iohandler.filename = spatialdb/mat_concrust.spatialdb

quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 3
# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
[pylithapp.timedependent]
interfaces = [fault]

[pylithapp.timedependent.interfaces]
fault  = pylith.faults.FaultCohesiveDyn

[pylithapp.timedependent.interfaces.fault]
label = fault_interface
edge = fault_edge
id=102
quadrature.cell = pylith.feassemble.FIATSimplex
# up_dir = [0,-0.1,1]
quadrature.cell.dimension = 2
# Specify zero tolerance for detecting slip. Must be larger than the
# KSP absolute tolerance.
zero_tolerance = 1.0e-8
#A key issue is making sure the linear solver toleance is smaller than the tolerance used to detect slip
#friction.force_healing = True

friction = pylith.friction.SlipWeakening
friction.label = slip weakening
friction.db_properties = spatialdata.spatialdb.SimpleDB
friction.db_properties.label = Slip weakening
friction.db_properties.iohandler.filename = spatialdb/friction_smooth5_l17r3.spatialdb
friction.db_properties.query_type = linear

traction_perturbation = pylith.faults.TractPerturbation
[pylithapp.timedependent.interfaces.fault.traction_perturbation]
db_initial.label = Initial fault tractions
db_initial = spatialdata.spatialdb.SimpleDB
db_initial.iohandler.filename = spatialdb/interseismic_traction_smooth5_l17r3.spatialdb
db_initial.query_type = linear


# ----------------------------------------------------------------------
# output
#output = [domain,station]
#output.station = pylith.meshio.OutputSolnPoints
# ----------------------------------------------------------------------
# Domain
[pylithapp.problem.formulation.output.domain]
writer.filename =output_smooth5_l17r3/nicoya_simple_model.h5
vertex_data_fields = [displacement,velocity]


#station
#[pylithapp.problem.formulation.output.station]
#vertex_data_fields = [displacement,velocity]
#reader = pylith.meshio.PointsList
#writer = pylith.meshio.DataWriterHDF5
#reader.filename = spatialdb/nodeslist.spatialdb
#output_freq = time_step
#time_step = 0.0059999*s
#writer.filename = output_smooth5_l17r3/nicoya_simple_model-station.h5
#coordsys.space_dim = 3
#coordsys.units = km

# Faults
[pylithapp.problem.interfaces.fault.output]
writer = pylith.meshio.DataWriterHDF5
writer.filename =output_smooth5_l17r3/nicoya_simple_model-fault.h5
vertex_info_fields = [traction_initial_value,static_coefficient,dynamic_coefficient,slip_weakening_parameter,cohesion]
vertex_data_fields = [slip,slip_rate,traction]
output_freq = time_step
time_step = 0.0069999*s


# Materials
[pylithapp.timedependent.materials.left.output]
writer.filename = output_smooth5_l17r3/nicoya_simple_model-left.h5

[pylithapp.timedependent.materials.right.output]
writer.filename = output_smooth5_l17r3/nicoya_simple_model-right.h5


# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
# NOTE: There are additional settings specific to fault friction.
[pylithapp.petsc]

# Friction sensitivity solve used to compute the increment in slip
# associated with changes in the Lagrange multiplier imposed by the
# fault constitutive model.
friction_pc_type = asm
friction_sub_pc_factor_shift_type = nonzero
friction_ksp_max_it = 25
friction_ksp_gmres_restart = 30
# Uncomment to view details of friction sensitivity solve.
friction_ksp_monitor = true
friction_ksp_view = true
friction_ksp_converged_reason = true

# End of file
